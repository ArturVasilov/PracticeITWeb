<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>Material design</title>
    <link rel="stylesheet" type="text/css" href="articles/material_design/styles.css">
</head>
<body>

<?php
include('pages_header.php');
?>

<p>
    На ежегодной конференции Google I/O 2014 компания Google предоставила новую концепцию дизайна, которая была
    названа MaterialDesign. Концепция «материального» дизайна была полностью реализована в новой версии Android
    Lillipop.
    На мой взгляд, уже на этом этапе возникает несколько важных вопросов, а именно:
</p>

<p>
    1) Что такое Material Design?
</p>

<p>
    2) Где и как его использовать?
</p>

<p>
    3) И почему мы должны изучать подобные вещи?
</p>

<p>
    Ответив на эти вопросы, мы сможем хорошо представлять себе основы Material Design.
</p>

<p>
    Итак, что же такое Material Design? Разумеется, это нечто большее, чем просто советы о том, как компоновать
    элементы
    пользовательского интерфейса или
    рисовать изображения. Material Design - это сложная система, которая всесторонне описывает, как создавать
    удобный и
    приятный дизайн, единый для всех
    устройств и платформ. Можно сказать, что Material Design это целая философия.
</p>

<p>
    Такое название этой концепции дано не случайно. В Material Design используются «натуральные» материалы,
    например,
    бумага или чернила. Material Design
    отражает реальность нашего мира, и все происходящие в нем события укладываются в законы физики и логики.
</p>

<p>
    Естественно, основной платформой для Material Design стала система Android. И кроме этого, «материальный» дизайн
    очень часто используется в веб-разработке.
</p>

<p>
    Эта статья посвящена Android-разработке, а не дизайну, поэтому может показаться странным, что мы рассматриваем
    эту
    тему. Но ответ заключается в том, что
    философия Material Design столь всеобъемлюща, что любой разработчик должен иметь хорошее представление о ней,
    чтобы
    создавать профессиональные и удобные в
    использовании приложения. Поэтому сейчас нам нужно понять основные принципы Material Design, а также то, какие
    средства у нас есть для создания
    «материальных» приложений.
</p>

<p>
    Во-первых, в Android SDK 21, а также в различных библиотеках поддержки довольно большая коллекция новых
    виджетов,
    которые позволяют создать сложный и
    дружелюбный пользовательский интерфейс с учетом правил Material Design. Эта часть весьма важна, поэтому мы в
    деталях
    рассмотрим ее ниже.
</p>

<p>
    Material Design согласуется с законами реального мира. А наш мир трехмерный, в то время как все графические
    компоненты Android являются двумерными. Новая
    версия Android исправляет этот недостаток с помощью новых атрибутов, которые доступны всем элементам. Важно
    понимать, что сами объекты не становятся
    трехмерными, это сказалось бы негативно на интерфейсе пользователя, а лишь создают такое ощущение. Это
    достигается с
    помощью теней на заднем фоне элемента.
    Во-первых, элемент нужно приподнять, то есть сдвинуть по оси Z. Для этого служит атрибут elevation. И во-вторых,
    на
    заднем фоне создается тень, это
    делается с помощью стандартных фигур, которые определяются в xml-файлах. Пример:
</p>

<pre style="background:#eee;color:#000"><span style="color:#1c02ff">&lt;<span
            style="font-weight:700">TextView</span>
    <span style="font-style:italic"></span>&lt;!--other attributes -->
    <span style="font-style:italic">android</span>:elevation=<span style="color:#036a07">"3dp"</span>
    <span style="font-style:italic">android</span>:background=<span
            style="color:#036a07">"@drawable/shadow"</span> /></span>
</pre>

<p>
    res/drawable/shadow.xml:
</p>

<pre style="background:#eee;color:#000"><span style="color:#1c02ff">&lt;<span style="font-weight:700">shape</span> <span
            style="font-style:italic">xmlns</span>:android=<span style="color:#036a07">"http://schemas.android.com/apk/res/android"</span>
       <span style="font-style:italic">android</span>:shape=<span style="color:#036a07">"rectangle"</span>></span>
    <span style="color:#1c02ff">&lt;<span style="font-weight:700">solid</span> <span
            style="font-style:italic">android</span>:color=<span style="color:#036a07">"#42000000"</span> /></span>
    <span style="color:#1c02ff">&lt;<span style="font-weight:700">corners</span> <span
            style="font-style:italic">android</span>:radius=<span style="color:#036a07">"3dp"</span> /></span>
<span style="color:#1c02ff">&lt;/<span style="font-weight:700">shape</span>></span>
</pre>

<p>
    Следующей частью Material Design являются цвета. И здесь уже строго определены некоторые правила. Во-первых, вы
    должны выбрать главный цвет в своем
    приложении (primary color) и использовать не более 3 его оттенков. Во-вторых, вы можете выбрать еще один
    дополнительный цвет (accent color), который будет
    использоваться в качестве фона для различных управляющих элементов: кнопок, переключателей и так далее. Это два
    основных требования, более подробную
    спецификацию вы всегда можете посмотреть в руководстве по Material Design от Google.
</p>

<p>
    Вероятно, наиболее важной частью Material Design являются анимации. Здесь опять работает принцип «материальности»,
    то есть соответствия анимаций реальных
    законам физики. Что это значит: все объекты в нашем мире имеют массу и не могут резко сдвигаться с места или
    тормозить. Все анимации должны быть плавными и
    натуральными. При этом надо учитывать, что объекты разного размера ведут себя по-разному, например, более легкие
    могут быстрее изменять свою скорость и
    т.п.
</p>

<p>
    Еще один принципиальный момент – взаимодействие с пользователем. Анимации являются лучшей возможностью сообщить
    пользователю дополнительную информацию и
    поблагодарить его за работу с приложением. Разумеется, это образное выражение. Суть заключается в том, что когда
    пользователь взаимодействует с
    приложением, и при каждом его действии происходят красивые и продуманные вещи, он чувствует удовлетворение и желания
    продолжать работу.
</p>

<p>
    При этом надо понимать, что нельзя создавать анимации только ради их наличия. Каждая анимация должна иметь смысл и
    быть логичной, так как только такие
    анимации могут улучшить опыт взаимодействия пользователя и приложения.
</p>

<p>
    Все такие детали должны быть очень хорошо проработаны, ведь только тогда они смогут образовать единую систему,
    которая будет привлекать все больше и больше
    пользователей красивым и продуманным дизайном.
</p>

<p>
    Перед тем, как перейти к практическому применению всех этих вещей, мне хотелось бы вскользь упомянуть об одном очень
    популярном виджете – Floating Action
    Button. Это новая концепция для вида кнопки, по нажатию на которую выполняется некоторое важное для текущего экрана
    действие. Обычно она позиционируется
    как возвышающийся объект и находится обычно в правом нижнем углу. Чаще всего это кнопка служит либо для создания
    чего-то нового (написать новое письмо,
    создать новое событие и т.д.), либо играет роль переключателя (присоединится к событию). Иногда она прикрепляется к
    списку. При этом, когда список
    прокручивается, кнопка пропадает вниз, и когда останавливается, она возвращается.
</p>

<p>
    Несмотря на то, что это весьма популярный виджет, Google не включает его в стандартный набор средств SDK. Однако
    существует большое число реализации
    данного виджета от разных разработчиков, и вам нужно лишь найти подходящий вариант или создать его самому.
</p>

<p>
    Я подчеркну, что я не ставлю себе целью рассказать вам все о Material Design, для этого существует спецификация, в
    которой вы можете найти более подробную
    информацию. Моей целью было только познакомить вас с общими принципами Material Design, чтобы можно было перейти к
    рассмотрению практического приложения.
</p>

<hr>

<?php
require_once('CommentsManager.php');
$comments = new CommentsManager();
$comments->printArticleComments(1);
?>

<?php
require_once('SessionManager.php');
echo "<br><br>";
$sessionManager = SessionManager::getInstance();
if ($sessionManager->active()) {
    $name = $sessionManager->getName();
    $link = 'AddComment.php';
    $form = "
        <form id='add_comment' name='add_comment' action={$link} method='post'>
        <input type='text' name='text' id='text' placeholder='Text' required/>
        <input type='hidden' name='article_id' value='1'>
        <input type='hidden' name='article_url' value='material_design_part_1.php'>
        <button type='submit'>Post</button>
    </form>
    ";
    echo $form;
}
else {
    $logIn = "log_in_form.html";
    echo "<a href='" . $logIn . "'>Log in to post comments</a>";
}
?>

</body>
</html>